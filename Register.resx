<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABE5JREFUaEPNmkeIFEEUhseAijliFswZD4IRPHhRMRy8mNCDejFiAtGTIujJdBDj
        wYtgDpgTqAfRg2AW00FEEDEnzPp/5bxlXXe6e2qnqf7hg3k1VbWvprur3nu9uRKoi5giVoqNYp1YLoaL
        miLTqiGmi9vidwSPxDCRSbUWl4U5+0zsFevFojxcmfuC7z+LTWKIyIwaC3PwgRgtqonKVF2sFbZg2C3q
        iuDaKXDommhEQ4xYTC+xQLwQjD0ogqqD+CG+i340FKlO4rVgMSNpCKXZAicOOMtPK4TdYsF0SODEDGf5
        qadgjsfOCqQrAicGOctPbNtfxC8R7KF/KFhID2f5651gHnbAILoncKC7s/z1STBPQ2cF0EWBA1U5qZsK
        5vjorEBip8GJic7y00DBHDedFUgEgjixxll+WiKYY7OzAmmEwInzzvLTUcEck50VSKMETrwXPuF5LfFW
        MAcxWjBdEDixVBQKFKPEmGWCOc7REEq2/frEWSbGMscdZwXSPoETJFS+mimYg/wlmKYJnHgiSJ6KFWMY
        yxxTaQgl4qT9gjiJMINcI6noa6EJ0TNzBdd1gUO9nZVMfQVjeM4yI/JxnFrtrGTiEGXMFmdlRP0FTpHt
        taAhRsRXrwRjhtKQJR0WOMbZ0oyGAmogTgv6nqUha2orngscjEq0yF3ow4nemYYsikoKTg52VuWigkKf
        uNS2vZgrTgo2BMJ84PMJMUe0E6noloi7IpajP3XW/+LKbhdUZ+gXBdWbbaKNKKko0PEH2FoLiV+aPtS0
        KmqcIADl+6+CfIdchwy0Xh4+TxJ8Rx/6MmasKIlaCi49E+NsIVHE4wD9JsrfGvPET8F4wpWOIk7UxTiQ
        GcNYbsUqiStwQzDhKRpitEfQd5ez/l4JHOF2WkhDkVosGMscXleGk5zMjl8Xx7i1KGjHiXuaevEAwTNh
        t5PPIkwshjkIe5L44BKo8YKskFuEwfwS1ICLKeeQVKEdgjniol/6QJSI2eiz1VkFVEdwD1q0CpRxGNRH
        +IhniVuChzbumUiyEM4l5mI340r/I7I48g3eedhkvMyZL5qIqogfhvmS1H2TLARxZelHXbpMbHdHhE1C
        ibSUVXMONuZlO42T+RAnXvnR75izpNrikqDxpZggSi17QdTNWdFKuhDOGfqVpQcbBA2cwEn+kI9styKQ
        LC9zOinlxVy0MXeuq+CBYTeiEpiWUl/IqrxxBiNFpX5rXc0bszBSVOoP+5u8kRb8IwEiFMdOY/t1F8EG
        pYUV4wgaeRY5xAgAo2Rjo8R/XBQ8ENMW+QQOEsVGKclCeM1NnyAFDQJI270I/HxlrydIoVvREEKE3hbG
        +yyGRVgYH7Sqj4i7cIRflSg2SWGCZ8JuJ8ayeWRCY4SVUXlo2YF4AUTlpX4ePrPFUkC3PIjbKfiVqKjm
        gsolOw9ORkEf0ohEiVQosX1yFhwXd8WHPHzmsOO7iC02l/sDIvOcRwuJ1QgAAAAASUVORK5CYII=
</value>
  </data>
  <data name="groupBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kgQIQJIAAUgSIABJAgQgSYAAJAkQgCQBApAkQACSBAhAkgABSBIgAEkCBCBJgAAkCRCAJAECkCRAAJIE
        CECSAAFIEiAASQIEIEmAACQJEIAkAQKQJEAAkgQIQJIAAUgSIABJAgQgSYAAJAkQgCQBApAkQACSBAhA
        kgABSBIgAEkCBCBJgAAkCRCAJAECkCRAAJIECECSAAFIEiAASQIEIEmAACQJEIAkAQKQJEAAkgQIQJIA
        AUgSIABJAgQgSYAAJAkQgCQBApAkQACSBAhAkgABSBIgAEkCBCBJgAAkCRCAJAECkCRAAJIECECSAAFI
        EiAASQIEIEmAACQJEIAkAQKQJEAAkgQIQJIAAUgSIABJAgQgSYAAJAkQgCQBApAkQACSBAhAkgABSBIg
        AEkCBCBJgAAkCRCAJAECkCRAAJIECECSAAFIEiAASQIEIEmAACQJEIAkAQKQJEAAkgQIQJIAAUgSIABJ
        AgQgSYAAJAkQgCQBApAkQACSBAhAkgABSBIgAEkCBCBJgAAkCRCAJAECkCRAAJIECECSAAFIEiAASQIE
        IEmAACQJEIAkAQKQJEAAkgQIQJIAAUgSIABJAgQgSYAAJAkQgCQBApAkQACSBAhAkgABSBIgAEkCBCBJ
        gAAkCRCAJAECkCRAAJIECECSAAFIEiAASQIEIEmAACQJEIAkAQKQJEAAkgQIQJIAAUgSIABJAgQgSYAA
        JAkQgCQBApAkQACSBAhAkgABSBIgAEkCBCBJgAAkCRCAJAECkCRAAJIECECSAAFIEiAASQIEIEmAACQJ
        EIAkAQKQJEAAkgQIQJIAAUgSIABBsx9ZxKkctMrZywAAAABJRU5ErkJggg==
</value>
  </data>
</root>